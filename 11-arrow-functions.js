
// СТРЕЛОЧНЫЕ ФУНКЦИИ
// Стрелочная функция - это выражение. 
// Стрелочные функции всегда анонимны.

(a, b) => {
    let c 
    c = a + b
    return c
}

// Присваивание стрелочной функции переменной variableArrowFunction
const variableArrowFunction = (a, b) => {
    let c 
    c = a + b
    return c
}

variableArrowFunction(1, 2)

/* Почему лучше использовать присваивание функции или функционального выражения переменной, 
чем объявление функции с помощью ключевого слова "function"?
В случае обявления переменной типа const и присваивания ей функционального выражения или стрелочной функции
присвоить новое значение такой переменной не получится. 
Что нельзя сказать об использовании ключевого слова "function": */

function myFunction() {
    console.log('Просто объявленная функция.')
}

myFunction() // функция

myFunction = "Теперь не функция!"
console.log(myFunction) // Теперь не функция!

// Стрелочная функция  в вызове другой функции:
setTimeout(() => {
    console.log('Hello!')
}, 1000)

// Сокращенная запись стрелочой функции:
// 1. Если имеет один парамер:
a => {
    // тело функции
}

// 2. Если тело функции состоит из одного выражения:
(a, b) => a + b // в этом случае трелочная функция неявно возвращает результат выражения

// 3. Комбо:
a => a + b

console.log(typeof (a => a + b)) // function